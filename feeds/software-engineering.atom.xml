<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Starting Point - Software Engineering</title><link href="https://www.nacnez.com/" rel="alternate"></link><link href="https://www.nacnez.com/feeds/software-engineering.atom.xml" rel="self"></link><id>https://www.nacnez.com/</id><updated>2023-01-14T00:00:00+05:30</updated><entry><title>The Daily Scrum/Stand-up Meeting</title><link href="https://www.nacnez.com/daily-scrum.html" rel="alternate"></link><published>2023-01-14T00:00:00+05:30</published><updated>2023-01-14T00:00:00+05:30</updated><author><name>Srinivas Narayanan</name></author><id>tag:www.nacnez.com,2023-01-14:/daily-scrum.html</id><summary type="html">&lt;p&gt;Recording my observations &amp;amp; preferences on the Daily Scrum/Stand-up meeting&lt;/p&gt;</summary><content type="html">&lt;div class="admonition tip"&gt;
&lt;p class="admonition-title"&gt;TL;DR&lt;p&gt;A good stand-up is always about the team. A team which shows ownership, respects each other and works with an agreed structure will do great. &lt;/p&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For many years, I have been part of teams that follow the agile methodology and practises some kind of scrum. One of the key practices in agile scrum is the Daily Stand-up or Scrum meeting. The DSM is done in different ways, and it is really up to the team to do what works best for them. That said, there are certain characteristics which are important to maintain, irrespective of the team which is following DSM. I explain these characteristics as I understand them and see fit.&lt;/p&gt;
&lt;h2 id="a-typical-daily-scrum-meeting"&gt;&lt;span class="bold-green"&gt;A typical Daily Scrum Meeting&lt;/span&gt;&lt;/h2&gt;
&lt;hr class="style-two"/&gt;

&lt;div class="figure"&gt;
    &lt;img alt="DSM Virtual Meeting" src="https://www.nacnez.com/images/dsm/dsm_1.jpeg"/&gt;
    &lt;p class="caption"&gt;A Virtual DSM: Photo by &lt;a href="https://unsplash.com/@cwmonty?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"&gt;Chris Montgomery&lt;/a&gt; on &lt;a href="https://unsplash.com/photos/smgTvepind4?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span class="bold-calm"&gt;It is 11:30am in the morning. Every one from the "Delta" team has assembled in the virtual meeting room. Out of 13 member team (11 developers, 1 product owner and 1 engineering manager), only a few of them had turned on the video. Some kind of construction noise is heard in the background. Ram, the manager opens the scrum dashboard and filters the cards for Hasina, a team member.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Ok Hasina, can you please share your update"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Sure Ram. Yesterday, I was working on these items but got stuck on some testing issues. Ram, what is the priority of this task?"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Hasina, this needs to be delivered by the end of this week. So we need to plan accordingly"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Got it Ram. What about this other requirement? Should I pick that as well now or later?"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Let us do that later."&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Ok Ram. Other than that, I was able to close out this story NZ-202. I will be picking up new story today from the TODO lane"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Thanks Hasina. Can anybody who is not talking turn off their mikes? There is too much noise... Gagan, can you share your updates."&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt; Hasina turns off her video. Also, the background noise dies down. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Ok Ram. I am facing some kind of strong migration issue."&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Can you give some context on this Gagan?"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Oh sure Ram. Yesterday, I was working on the status check API story and was trying to do the DB model changes. That is when I faced the problem."&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Can you explain the details of the issue?"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"So when I try to deploy the migration script locally.... &lt;em&gt;blah&lt;/em&gt;... &lt;em&gt;blah&lt;/em&gt;... &lt;em&gt;blah&lt;/em&gt;... "&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt; Vikas, a developer joins the call. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Have you tried to close the console and start a new session" chimed in Winston&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"That did not help" said Gagan.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"What about trying to restart the laptop?" Winston countered.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Come on, that is not a solution buddy!"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;Vidya starts fidgeting with her keychain as this happens. Shanti (the Product Manager) lets out a muffled yawn.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"There is an option in the library to turn off specific test cases. You could use that Gagan" said Abdul.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Thanks Abdul. I will try that out"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Can you continue with the update, Gagan" said Ram.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Sure Ram. So I will continue working on this issue today and I will try to close it out by EOD today"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Thanks Gagan. Vidya, can you give an update"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Sure Ram. Let me see.... What was I working on?... Yeah, I worked on the validation story... no that was day before... sorry. Yes I worked on the transformation story yesterday... blah... blah... blah... &lt;/span&gt;
...&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;This goes on for 40 minutes and at 12:10 pm, Ram asks Shanti&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Do you have any product updates for the team Shanti?"&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Nothing from me Ram."&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-green"&gt;"Great. Have a good day folks!"&lt;/span&gt;&lt;/p&gt;
&lt;hr class="style-two"/&gt;

&lt;p&gt;This is a typical Daily Stand-up or Scrum meeting I observe in my world. I am sure many of you have experienced something similar. I want to dissect this example, but first I want to give you some historical context on Stand-ups and Daily Scrum meetings.&lt;/p&gt;
&lt;h2 id="origins"&gt;&lt;span class="bold-green"&gt;Origins&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;The daily stand-up originated from the annals of Extreme Programming (XP). Kent Beck made this methodology famous through his book by the &lt;a href="https://www.goodreads.com/en/book/show/67833.Extreme_Programming_Explained"&gt;same name&lt;/a&gt; (almost). The daily stand-up was just one of the practices/rules in Extreme Programming (dig more &lt;a href="http://www.extremeprogramming.org/rules.html"&gt;here&lt;/a&gt;). Our focus is only the daily stand-up.&lt;/p&gt;
&lt;p&gt;Let me add some quotes from the source&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;A stand up meeting every morning is used to communicate problems, solutions, and promote team focus. Everyone stands up in a circle to avoid long discussions. It is more efficient to have one short meeting that every one is required to attend than many meetings with a few developers each.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;During a stand up meeting developers report at least three things; what was accomplished yesterday, what will be attempted today, and what problems are causing delays. The daily stand up meeting is not another meeting to waste people's time. It will replace many other meetings giving a net savings several times its own length &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;... &lt;a href="http://www.extremeprogramming.org/rules/standupmeeting.html"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think this is a good description for us to work with. &lt;/p&gt;
&lt;p&gt;Let us move to the Daily Scrum meeting which comes from the &lt;a href="https://www.scrum.org/resources/what-is-scrum"&gt;Scrum methodology&lt;/a&gt;. Again, I am going to the source:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;The purpose of the Daily Scrum is to inspect progress toward the Sprint Goal and adapt the Sprint Backlog as necessary, adjusting the upcoming planned work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;The Daily Scrum is a 15-minute event for the Developers of the Scrum Team. To reduce complexity, it is held at the same time and place every working day of the Sprint. If the Product Owner or Scrum Master are actively working on items in the Sprint Backlog, they participate as Developers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;The Developers can select whatever structure and techniques they want, as long as their Daily Scrum focuses on progress toward the Sprint Goal and produces an actionable plan for the next day of work. This creates focus and improves self-management.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;Daily Scrums improve communications, identify impediments, promote quick decision-making, and consequently eliminate the need for other meetings.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="bold-calm"&gt;The Daily Scrum is not the only time Developers are allowed to adjust their plan. They often meet throughout the day for more detailed discussions about adapting or re-planning the rest of the Sprint’s work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;... &lt;a href="https://scrumguides.org/scrum-guide.html#daily-scrum"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Though these two processes have different origins, you can surely notice similarities. I will list the ones which strike me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They happen on a daily basis, preferably in the morning.&lt;/li&gt;
&lt;li&gt;One of their main purpose is to eliminate other meetings.&lt;/li&gt;
&lt;li&gt;They are expected to be short (you can potentially stand through them).&lt;/li&gt;
&lt;li&gt;They are &lt;strong&gt;owned by Developers&lt;/strong&gt;, allowing them to manage themselves as a team.&lt;/li&gt;
&lt;li&gt;You talk about progress made and impediments faced/facing in both cases.&lt;/li&gt;
&lt;li&gt;Goal is to work on a plan and improve focus and self-management.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There could be more, but these stand out to me. Using these sources as the main reference (I will include other ideas if required), let us dissect the example DSM (of the &lt;em&gt;Delta&lt;/em&gt; team) which I described before. I am treating the name stand-up (XP) and daily scrum meeting (DSM) as synonyms. If you see one, I mean either.&lt;/p&gt;
&lt;p&gt;Before you look at my thoughts below, spend sometime dissecting the &lt;em&gt;Delta&lt;/em&gt; stand-up and share the same in comments below.&lt;/p&gt;
&lt;hr class="style-three"/&gt;

&lt;h2 id="the-delta-team-dsm-biopsy"&gt;&lt;span class="bold-green"&gt;The "Delta Team" DSM biopsy&lt;/span&gt;&lt;/h2&gt;
&lt;div class="figure"&gt;
    &lt;img alt="Doing a biopsy on the Delta team DSM" src="https://www.nacnez.com/images/dsm/biopsy.jpg"/&gt;
    &lt;p class="caption"&gt;Disecting the Delta DSM - image by &lt;a href="https://pixabay.com/users/ri_ya-12911237/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=4607284"&gt;Ri Butov&lt;/a&gt; from &lt;a href="https://pixabay.com//?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=4607284"&gt;Pixabay&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id="the-good-parts"&gt;&lt;span class="bold-green"&gt;The "Good Parts"&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;There are good things happening in the &lt;em&gt;Delta&lt;/em&gt; team stand-up.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The stand-up happens at a regular daily cadence.&lt;/li&gt;
&lt;li&gt;Developers have the ability to bring up their impediments and get solutions to move things forward.&lt;/li&gt;
&lt;li&gt;There is free-flowing conversation happening between developers.&lt;/li&gt;
&lt;li&gt;There is an explicit section for the PM to chime in and add thoughts. This is not prescribed in any of the original guides, but I like this idea as long as it is kept short.&lt;/li&gt;
&lt;li&gt;They are using the common scrum dashboard to drive the meeting. This allows people to get on the same page quickly, and they have the reference to dive deeper if required.&lt;/li&gt;
&lt;li&gt;Some people are turning on video for the call and that is good thing. More about this on the other sections.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have not elaborated the above good parts because I think they are self-evident. Let us get into some &lt;span class="bold-angry"&gt;not so good parts&lt;/span&gt; now.&lt;/p&gt;
&lt;h3 id="the-time"&gt;&lt;span class="bold-green"&gt;The time&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;Delta&lt;/em&gt; team stand-up starts at 11:30 am. I am not sure if that can be called &lt;span class="bold-angry"&gt;&lt;em&gt;morning&lt;/em&gt;&lt;/span&gt;. That is closer to the afternoon. There could be legitimate reasons for this - people working in different time zones. Also in today's world of flexible work timings this is probably unavoidable.&lt;/p&gt;
&lt;p&gt;Having said that, if you ask me, I would prefer the stand-up to start much earlier - sometime around 9:30 am. My reason is that the stand-up is supposed to help you create an action plan for the day (this is not really planning but to get clarity). It is better to have this clarity earlier in the day, so that team members know where they have to focus on.&lt;/p&gt;
&lt;p&gt;Other aspect of time is the duration. 40-45 minutes of stand-up time is very high. The reason why extreme programming suggests the stand-up should be done standing up is to keep it short (it is actually not necessary for people to stand up as long as the duration is kept in mind). Similarly, the scrum guide also suggests that the DSM should be 15 minutes long. &lt;/p&gt;
&lt;p&gt;In my experience, when a team gets together for the stand-up discussion, there are times when it needs a little more time (than 15 minutes). But not always. A steady 45-minute stand-up is a smell (like a code smell) to be addressed. We will look at some remedies soon after the biopsy.&lt;/p&gt;
&lt;h3 id="the-ownership"&gt;&lt;span class="bold-green"&gt;The ownership&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Carefully observe &lt;span class="small-italicized-green"&gt;(means read again if required)&lt;/span&gt; the DSM conducted by the &lt;em&gt;Delta&lt;/em&gt; team, and tell me who is the owner of the meeting. I feel that the meeting is owned by Ram who is actually a manager. In scrum terms, we could probably treat him as the Scrum master. &lt;/p&gt;
&lt;p&gt;Ram governs the flow of the conversation. Everyone is talking to him in the stand-up. This is really wrong. A practice like this converts the daily stand-up meeting into a status meeting. Once this happens, the team is just answerable to the manager. Self-management, team spirit and team ownership go out of the window. People will not enjoy going to these meetings since they are afraid that the manager will judge them. Real impediments may not get discussed. This is a very bad situation and needs remediation. The &lt;em&gt;Delta&lt;/em&gt; team may not be in this situation yet, but they are in-route.&lt;/p&gt;
&lt;p&gt;Another thing that adds to this issue is that the Delta team is fairly large. A 13 member team can be pretty crowded and intimidating especially for junior developers and new joinees. This is only a passing mention. Its implication &amp;amp; solution is beyond the scope of this article. &lt;/p&gt;
&lt;h3 id="the-rambling"&gt;&lt;span class="bold-green"&gt;The rambling&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;Delta&lt;/em&gt; team stand-up is very ad-hoc in my opinion. Everybody seems to be talking all the time. There is no structure to the conversation. The Extreme Programming stand-up actually prescribes a structure to the conversation. The Scrum DSM is little more flexible but has essentially advocated similar kind of information to be shared - Work progress, Impediments, Plan for today etc.&lt;/p&gt;
&lt;p&gt;In the Delta team stand-up, Gagan starts his conversation with mentioning an impediment. Ram draws out the context and eventually multiple others (Winston and Abdul) jump in to try to suggest a solution and this drags on leading to others getting restless. The availability of help is a good thing, but the lack of structure leads to rambling and others tuning out of it. This kind of rambling conversation is also why the stand-up stretches out for such a long time. This also leads to people tuning out of the conversation.&lt;/p&gt;
&lt;p&gt;Another source of rambling is the lack of preparation of the team members when they come to the stand-up. Vidya keeps stumbling to figure out what she needs to talk about. This again leads to wastage of time. It also sends a wrong message that there is no respect for people's time. Bad!&lt;/p&gt;
&lt;h3 id="what-goal"&gt;&lt;span class="bold-green"&gt;What Goal?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Another thing missing in the DSM is the absence of discussion or tracking to check team's progress towards their Sprint goal. Typically, teams look at a burn-down chart to figure out where they are with respect to what they planned for the sprint. &lt;/p&gt;
&lt;p&gt;Scope discussions should be related to already defined goals and if they need to be altered. In the Delta team, the priorities seem to be unclear and getting figured out in the stand-up. While this is better than not getting clarity, the ideal place for this is the Sprint planning meeting.&lt;/p&gt;
&lt;h3 id="rude"&gt;&lt;span class="bold-green"&gt;Rude?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;I am not saying that the Delta team folks are talking rudely to each other or behaving badly. But there are some subtle things to look at.&lt;/p&gt;
&lt;p&gt;Right at the beginning of the meeting, there was noise coming in to the stand-up meeting. Only after Ram called it out, the relevant person muted their audio to stop the disturbance. While this is not outright rude, it just tells that the team members are insensitive to others. Also, this might be a one off and if so, we could ignore it. But if this happens regularly then it means that the team is not following basic etiquette.&lt;/p&gt;
&lt;p&gt;Another similar incident in the Delta stand-up is Vikas joining late.  This again sets up a bad precedence for the entire team. I am not talking about being late by a few seconds or a minute. &lt;/p&gt;
&lt;p&gt;In my opinion, it is better to send an offline update to the team rather than joining the stand-up after minutes of its starting.&lt;/p&gt;
&lt;h2 id="remedial-ideas"&gt;&lt;span class="bold-green"&gt;Remedial Ideas&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Now that the biopsy and diagnosis is complete, it is time for some remedial actions.&lt;/p&gt;
&lt;div class="figure"&gt;
    &lt;img alt="Remedies for a better DSM for Delta team" src="https://www.nacnez.com/images/dsm/remedy.jpg"/&gt;
    &lt;p class="caption"&gt;Remedies for improving the DSM - image by &lt;a href="https://pixabay.com/users/angelorosa-4392745/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=2055130"&gt;Angelo Rosa&lt;/a&gt; from &lt;a href="https://pixabay.com//?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=2055130"&gt;Pixabay&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id="transfer-ownership-to-team"&gt;&lt;span class="bold-green"&gt;Transfer Ownership to team&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The first thing I want to address is the aspect of ownership. While other aspects are important, this one is critical. There are a couple of things that Ram (the scrum master) can do to change the situation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ask everyone to explicitly address the team instead of addressing him (the manager/ the scrum master). This might seem silly, but doing this sends a signal. The mindset created is that as a developer, "I am responsible to the whole team. We as a team own this".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is need for someone to govern the flow of the conversation. So get developers to take turns (round-robin) at playing that role. I have successfully tried this with my teams and found that it helps. Doing this helps to reinforce the feeling that we are a team and are responsible for each other. This technique also helps groom team members to act like owners and help in governance. As a side benefit, the shy developers get a chance to express themselves in a safe environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A key thing to note is that ownership &amp;amp; accountability comes only if one has a say on how things go. This means that Ram shouldn't be dictating all the decisions of any process (including stand-up). The members of the team must have a say, and they need to feel heard. Decisions have to be taken jointly. While this might be more time-consuming, decisions taken this way stick better.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once these are done, ownership is no longer with Ram but with the entire team. Team is empowered to own its destiny, Ram (the manager) is just a guide in the process. This drives ownership back into the team. &lt;/p&gt;
&lt;h3 id="create-a-structure"&gt;&lt;span class="bold-green"&gt;Create a structure&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The second key thing to address is the rambling. We do this by providing some structure to the stand-up discussion. The team can do a couple of things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make every member to stick to a common structure of providing the updates. The team could adopt the XP style or a variation of it &lt;span class="bold-calm"&gt;as decided by the team&lt;/span&gt;. It is the job of the team as a whole (or the current week coordinator/scrum master - not the Manager) to ensure that the team members follows the structure when they provide updates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When a developer is stuck and needs help or discussion then they can announce a &lt;strong&gt;"Post Stand-up"&lt;/strong&gt; discussion that is needed after stand-up. Some of you might have heard this term before; I will explain it down the line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure that we look at where we are with respect to the Spring goal. Discuss progress using burn-down charts etc. to ensure that everyone understands where we are and where we are going.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr class="style-seven-top"&gt;

&lt;h4 id="how-a-post-stand-up-works"&gt;&lt;span class="bold-green"&gt;How a Post Stand-up works?&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;As part of stand-up, I mention that I worked on a particular task/story yesterday and I plan to either continue on it or pick another one today. I might have an impediment for which I need help or want a discussion to clear out some ideas. For doing this I state that I need a "Post Stand-up" discussion after everyone goes through their own updates. The stand-up is complete once updates and sprint progress discussions are complete. For the Post stand-up discussion, relevant &amp;amp; interested people can stay and others can drop off. This saves time for many developers who are not connected to the discussion. Also, the post stand-up allows the stand-up discussion to be more focused, structured and short. Since only relevant people need to be present, the post stand-up discussion itself could become more focused.&lt;/p&gt;
&lt;p&gt;There can be a concern that if we create post stand-ups then the team could lose out on learnings that might come from knowing about the impediments &amp;amp; solutions. This is a valid concern, but post stand-ups don't eliminate participation. It only makes it a choice for the person which respects their time and pressures. In my experience, I have found that this works well for teams.&lt;/p&gt;
&lt;p&gt;Again, remember that the &lt;em&gt;Post Stand-up&lt;/em&gt; is a good broad idea. You can use it, tweak it and make it your own.&lt;/p&gt;
&lt;hr class="style-seven-bottom"/&gt;

&lt;p&gt;I also want to emphasize that we need the stand-up to be a place where developers can have free-flowing and open conversations. The structure is only to help the developers, but if that structure becomes a problem then we obviously need to change things up. As I said earlier, this should be done as a team.&lt;/p&gt;
&lt;p&gt;Once you have a structure and start having post stand-ups, the duration of stand-up will come down (provided some of the below etiquette are followed). You can (and should) measure it so that we know how we are doing. I have done this with one of my sprint teams (after discussing with the team of course) and it helped us to look for ways to fine-tune the stand-up process. Measurement is almost always a good thing. &lt;/p&gt;
&lt;h3 id="good-etiquette"&gt;&lt;span class="bold-green"&gt;Good etiquette&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;It always pays to be well-mannered and nice to each other. It also helps to be prepared. The following list of things are simple rules which ideally developers / team members should follow. The scrum master / manager should also nudge the members when required:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Always join the stand-up on time. Punctuality is a good thing.&lt;/li&gt;
&lt;li&gt;Mute yourselves when you are not talking. Actively listen though&lt;/li&gt;
&lt;li&gt;Prepare for the stand-up before it starts and not when another team member is giving their updates (you need to listen at that time). This will just take 2 minutes.&lt;/li&gt;
&lt;li&gt;Show yourselves - be on video. This helps you and the team in many ways.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="conclusionclosing-thought"&gt;&lt;span class="bold-green"&gt;Conclusion/Closing thought&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Tweaking things to make it work for you is very much in the spirit of agile. We still need to ensure that the fundamental philosophies are not compromised by our innovative techniques.&lt;/p&gt;
&lt;p&gt;This ends my own observations/learnings of one of the key processes in today's agile development world. What are you thoughts? Do you agree? Or do you think this is all &lt;code&gt;b*l***t&lt;/code&gt;? Your comments are welcome below.&lt;/p&gt;
&lt;h2 id="references"&gt;&lt;span class="bold-green"&gt;References&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.extremeprogramming.org/rules/standupmeeting.html"&gt;Daily Stand Up Meeting&lt;/a&gt; - Definition source&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html#daily-scrum"&gt;Scrum Guide - Daily Scrum&lt;/a&gt; - Definition source&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/forum/scrum-forum/38945/daily-scrum-and-daily-standup-same"&gt;Scrum Org: Daily Scrum discussion&lt;/a&gt; - A discussion on differences&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenexmachina.com/daily-stand-up-why-its-time-to-ditch-the-3-questions/"&gt;Daily Stand-up: Why it’s time to ditch the ‘3 questions’&lt;/a&gt; - A good article on what we can focus on in standup&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/north-code/s1e1-the-daily-stand-up-532fe59e11a1"&gt;Scrum Practices: The Daily Standup&lt;/a&gt; - Good set of tips to follow&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/agile/scrum/standups"&gt;Daily stand-ups for agile teams&lt;/a&gt; - An Atlassian perspective on standups - good tips on remote standups&lt;/li&gt;
&lt;li&gt;&lt;a href="https://walkingtree.tech/detect-scrum-anti-patterns/"&gt;How to detect Scrum anti-patterns?&lt;/a&gt; - Good write up on anti-patterns of agile itself. You can focus on DSM like me.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="small-italicized-green"&gt;Aum sarvam SriKrishnarpanam astu&lt;/span&gt; &lt;/p&gt;</content><category term="software-engineering"></category><category term="process"></category><category term="agile"></category><category term="scrum"></category><category term="people"></category><category term="extreme-programming"></category><category term="stand-up"></category></entry><entry><title>Why Process!</title><link href="https://www.nacnez.com/why-process.html" rel="alternate"></link><published>2019-10-27T00:00:00+05:30</published><updated>2019-10-27T00:00:00+05:30</updated><author><name>Srinivas Narayanan</name></author><id>tag:www.nacnez.com,2019-10-27:/why-process.html</id><summary type="html">&lt;p&gt;Expressing my reason for having a process&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="https://agilemanifesto.org/"&gt;agile manifesto&lt;/a&gt; says people come above processes. But every team I have worked with has always followed a process framework. The usual suspects are of course &lt;a href="https://en.wikipedia.org/wiki/Scrum_(software_development)"&gt;Scrum&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Kanban"&gt;Kanban&lt;/a&gt;. Why do they do this?&lt;/p&gt;
&lt;p&gt;&lt;img alt="A process" src="https://www.nacnez.com/images/process/process.png"&gt;&lt;/p&gt;
&lt;h2 id="a-process"&gt;A process&lt;/h2&gt;
&lt;p&gt;I would like to move away from the context of agile. For me, a process is something more fundamental. Processes are not something which only teams follow. It can be applied at a personal level as well. So let me state the definition of the word (Googled it!)&lt;/p&gt;
&lt;div class="admonition process"&gt;
&lt;p class="admonition-title"&gt;Process&lt;/p&gt;
&lt;p&gt;A series of actions or steps taken in order to achieve a particular end&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This definition captures the essence of the concept of process for me. Processes exist in all shapes and sizes. I follow a daily routine or process to start my day and get to work on time. I follow the process of TDD - &lt;code&gt;Red, Green, Refactor&lt;/code&gt; when I do any worthwhile development.&lt;/p&gt;
&lt;h2 id="why-process-for-me"&gt;Why process for me&lt;/h2&gt;
&lt;p&gt;I am sure you are asked to follow certain processes in day to day work. Or there could be these &lt;span class="bold-calm"&gt;process gurus&lt;/span&gt; who are asking you to follow some new shiny process. And, &lt;em&gt;you&lt;/em&gt; are either verbally or non-verbally quoting the agile manifesto to convey your disgust about following this process. In your mind - &lt;span class="bold-angry"&gt;processes are a waste of my time!&lt;/span&gt; . I used to belong to this same gang.&lt;/p&gt;
&lt;p&gt;Then something changed. May be old age (read experience, gray hair etc.) changed me. Once you get to a position where raw energy is not enough to accomplish something, I think the concept of process kicks in. At least that happened to me. Also raw energy is better harnessed with a process of steps that can be followed to meet an end. Just my experience. That said, I always remember that process is never bigger than the end it is trying to get to. It is a set of steps that one can follow to get there hopefully and it is also something which needs attention and tweaking.&lt;/p&gt;
&lt;h2 id="why-process-sks-for-you"&gt;Why process s**ks for you&lt;/h2&gt;
&lt;p&gt;Let us turn back the attention to you and your complaints. You ask me - &lt;span class="bold-angry"&gt; Why do processes s**k?&lt;/span&gt;. I have also felt it sometimes (even now feel it sometimes). In my opinion, processes suck for two reasons.&lt;/p&gt;
&lt;h3 id="one"&gt;&lt;span class="bold-calm"&gt;One:&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Most of us adopt a process so that we can move faster. &lt;span class="bold-calm"&gt;I follow this process and my delivery speed will double or triple. So I am going to do this.&lt;/span&gt; Within a week or two, you see you have slowed down to half the rate. &lt;span class="bold-angry"&gt;WTF! This process sucks. &lt;/span&gt; and this is the problem. In my opinion, the primary purpose of adopting a process is not speed. It is to get &lt;strong&gt;predictability&lt;/strong&gt; in terms of outcome and results. Let me repeat that -  &lt;strong&gt;Process helps make things predictable&lt;/strong&gt;. And believe me that is a more useful quality than speed. Predictability allows us to plan and decide; to ensure that we get where we want to get to in a well known time. It helps us make right choices. In a word it makes us &lt;strong&gt;effective&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Speed is about efficiency and that is good to have. But first you need to be effective. The main purpose of process is to drive that. It might eventually lead to speed or efficiency and that is great. But seeking speed instead of predictability is sure shot way to ensure that a process never works for you. It will &lt;em&gt;s**k&lt;/em&gt;!&lt;/p&gt;
&lt;h3 id="two"&gt;&lt;span class="bold-calm"&gt;Two:&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;A process becomes effective only if person(s) following it &lt;strong&gt;give it a chance&lt;/strong&gt;. Giving it a chance means&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="bold-calm"&gt;being involved&lt;/span&gt; in the process - look at the steps - its motivations and purposes,  understand them, observe them, and&lt;/li&gt;
&lt;li&gt;giving it &lt;span class="bold-calm"&gt;time&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When I started TDD, it felt very taxing and time consuming, even time wasting. I am sure many of you felt that way. Once I started following the process, observing the details and kept doing it for sometime, something changed. Now it has become my natural way to do development. Am I faster? I am slower than if I am just 'spike'-ing, but if I am developing anything worthwhile (that implies with tests), then TDD is faster. More importantly I am not looking for just speed. I now have a predictable way to write good quality code and allow me to think through things. And lo and behold the process works!&lt;/p&gt;
&lt;p&gt;Another good example of a process is a standup. A standup is where the team get together and share what is happening (that is a very simple definition but still a useful start). A typical standup&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;starts on time&lt;/li&gt;
&lt;li&gt;a team member talks about what they did, what they are going to do and impediments&lt;/li&gt;
&lt;li&gt;next one follows suit until everybody completes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is just the basic outline. The process entails a lot of other nuances which are equally important. Let me pick one of them.&lt;/p&gt;
&lt;p&gt;In one of the teams I was part of, standup happened as members reporting their previous day's work to the leader(s) in the team. And of course that sucked! The team members felt a lot of pressure. The standup process itself says a strong &lt;strong&gt;NO&lt;/strong&gt; to this. We being believers, noticed this and asked each person to face the team to provide the update and not the lead. And something changed - it felt more like sharing than reporting. There were many more nuances which we watched out for, acted and made changes to the way we were doing things. And it took time. Eventually the standup became a process which everybody looked forward to come into, so that they know where their team is and how they can help or contribute.&lt;/p&gt;
&lt;h2 id="in-closing"&gt;In closing&lt;/h2&gt;
&lt;p&gt;Good processes (whether team or individual) needs feedback and time. If you give up too early and don't really get involved it is bound to fail.&lt;/p&gt;
&lt;p&gt;And more important than that please remember a process is about predictability and consistency. Speed is a potential side effect which you may get to enjoy.&lt;/p&gt;
&lt;p&gt;&lt;span class="small-italicized-green"&gt;Please write in with your feedback and thoughts on processes in your own life or work. I would love to hear and learn more.&lt;/span&gt;&lt;/p&gt;</content><category term="software-engineering"></category><category term="agile"></category><category term="process"></category></entry></feed>